name: Python CI/CD Pipeline

on:
  push:
    branches: [ "homework-2", "develop" ]
  pull_request:
    branches: [ "develop" ]

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov mypy flake8

    - name: Run type checking
      run: |
        mypy src/ --strict --ignore-missing-imports

    - name: Run linting
      run: |
        flake8 src/ --count --show-source --statistics --max-line-length=120

    - name: Run tests with pytest
      run: |
        python -m pytest tests/ -v --cov=src --cov-report=xml

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      if: success()

  build-docs:
    name: Build Documentation
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/develop'

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"

    - name: Install docs dependencies
      run: |
        pip install mkdocs mkdocs-material

    - name: Build docs
      run: |
        mkdocs build --site-dir docs/_build

    - name: Deploy docs
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/_build
